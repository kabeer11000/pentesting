import React from "react";
import ReactDOM from "react-dom";

import { SubHeading } from "../components";
import { getUserName } from "./cookies";
import { getMessages, deleteMessage } from "./apis";
import { FaWhatsapp } from "react-icons/fa";
import { Screenshot } from "./Screenshot";
import { DeleteAnswer } from "./DeleteAnswer";

var moment = require("moment");

export class Timeline extends React.Component {
  constructor(props) {
    super(props);

    this.deleteMessageLocally = this.deleteMessageLocally.bind(this);

    this.state = {
      userName: getUserName() || ""
    };
    getMessages().then(m => {
      this.setState({ messages: m.messages, userName: m.name });
    });
  }

  componentDidUpdate() {
    if (window.location.href.includes("view=timeline")) {
      setTimeout(() => {
        var containerDomNode = ReactDOM.findDOMNode(this);
        containerDomNode.scrollIntoView({
          behavior: "smooth",
          block: "start",
          inline: "start"
        });
      }, 1000);
    }
  }

  deleteMessageLocally(id) {
    this.setState(({ messages }) => ({
      messages: messages.filter(m => m.i !== id)
    }));
    deleteMessage(id);
  }

  render() {
    if (this.state.messages === undefined) {
      return false;
    }
    return (
      <>
        <div className="w-full max-w-3xl mx-auto px-3 p-2 my-5 bg-gray-300 border border-gray-600 rounded-xlg">
          <SubHeading label="Your timeline" />
          <div className="w-full max-w-3xl mx-auto p-1 border-gray-600 rounded-lg">
            {this.state.messages.length > 0 ? (
              this.state.messages
                .reverse()
                .map(message => (
                  <Message
                    message={message}
                    deleteMessage={this.deleteMessageLocally}
                  />
                ))
            ) : (
              <NoMessagesFound />
            )}
          </div>
        </div>
      </>
    );
  }
}

const NoMessagesFound = () => {
  return (
    <div className="border bg-white flex-1 p-2 border-gray-500 text-gray-700 p-1 pl-3 rounded-xlg my-2 text-left">
      No Feedback yet
    </div>
  );
};

class Message extends React.Component {
  render() {
    let classes =
      "speech-bubble mx-3 mt-1 text-white flex-1 pl-3 py-3 rounded  text-left ";
    classes += ["blue", "green", "teal", "orange"][this.props.message.t % 4];
    return (
      <>
        <div className="flex items-center">
          <div className={classes}>{this.props.message.m}</div>
        </div>
        <div className="text-xl flex justify-between ml-3 mr-3 mb-4 mt-1">
          <div className="flex">
            <a
              className="mr-2 flex items-center hover:bg-gray-500 p-1 rounded"
              href={`https://api.whatsapp.com/send?text=${
                this.props.message.m
              }..\n Send anonymous feedback at ${window.location.href}`}
              target="_blank"
              rel="noopener noreferrer"
            >
              <FaWhatsapp />
            </a>
            <DeleteAnswer
              deleteMessageLocally={() =>
                this.props.deleteMessage(this.props.message.i)
              }
            />
            <Screenshot message={this.props.message} />
          </div>
          <div className="text-base text-gray-600">
            {moment.unix(this.props.message.t).fromNow()}
          </div>
        </div>
      </>
    );
  }
}
